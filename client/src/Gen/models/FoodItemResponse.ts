/* tslint:disable */
/* eslint-disable */
/**
 * Nutrition Tracker API
 * API Specification for Nutrition Tracker
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from "../runtime";
/**
 *
 * @export
 * @interface FoodItemResponse
 */
export interface FoodItemResponse {
    /**
     *
     * @type {number}
     * @memberof FoodItemResponse
     */
    protein: number;
    /**
     *
     * @type {number}
     * @memberof FoodItemResponse
     */
    carbohydrate: number;
    /**
     *
     * @type {number}
     * @memberof FoodItemResponse
     */
    fat: number;
    /**
     *
     * @type {number}
     * @memberof FoodItemResponse
     */
    kCal: number;
    /**
     *
     * @type {number}
     * @memberof FoodItemResponse
     */
    id: number;
    /**
     *
     * @type {string}
     * @memberof FoodItemResponse
     */
    manufacturer: string;
    /**
     *
     * @type {string}
     * @memberof FoodItemResponse
     */
    product: string;
    /**
     *
     * @type {boolean}
     * @memberof FoodItemResponse
     */
    isPublic: boolean;
    /**
     *
     * @type {string}
     * @memberof FoodItemResponse
     */
    source: string;
}

/**
 * Check if a given object implements the FoodItemResponse interface.
 */
export function instanceOfFoodItemResponse(value: object): value is FoodItemResponse {
    if (!("protein" in value) || value["protein"] === undefined) return false;
    if (!("carbohydrate" in value) || value["carbohydrate"] === undefined) return false;
    if (!("fat" in value) || value["fat"] === undefined) return false;
    if (!("kCal" in value) || value["kCal"] === undefined) return false;
    if (!("id" in value) || value["id"] === undefined) return false;
    if (!("manufacturer" in value) || value["manufacturer"] === undefined) return false;
    if (!("product" in value) || value["product"] === undefined) return false;
    if (!("isPublic" in value) || value["isPublic"] === undefined) return false;
    if (!("source" in value) || value["source"] === undefined) return false;
    return true;
}

export function FoodItemResponseFromJSON(json: any): FoodItemResponse {
    return FoodItemResponseFromJSONTyped(json, false);
}

export function FoodItemResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): FoodItemResponse {
    if (json == null) {
        return json;
    }
    return {
        protein: json["protein"],
        carbohydrate: json["carbohydrate"],
        fat: json["fat"],
        kCal: json["kCal"],
        id: json["id"],
        manufacturer: json["manufacturer"],
        product: json["product"],
        isPublic: json["isPublic"],
        source: json["source"],
    };
}

export function FoodItemResponseToJSON(json: any): FoodItemResponse {
    return FoodItemResponseToJSONTyped(json, false);
}

export function FoodItemResponseToJSONTyped(
    value?: FoodItemResponse | null,
    ignoreDiscriminator: boolean = false,
): any {
    if (value == null) {
        return value;
    }

    return {
        protein: value["protein"],
        carbohydrate: value["carbohydrate"],
        fat: value["fat"],
        kCal: value["kCal"],
        id: value["id"],
        manufacturer: value["manufacturer"],
        product: value["product"],
        isPublic: value["isPublic"],
        source: value["source"],
    };
}
