/* tslint:disable */
/* eslint-disable */
/**
 * Nutrition Tracker API
 * API Specification for Nutrition Tracker
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { MealEntryResponse } from './MealEntryResponse';
import {
    MealEntryResponseFromJSON,
    MealEntryResponseFromJSONTyped,
    MealEntryResponseToJSON,
    MealEntryResponseToJSONTyped,
} from './MealEntryResponse';

/**
 * 
 * @export
 * @interface MealResponse
 */
export interface MealResponse {
    /**
     * 
     * @type {number}
     * @memberof MealResponse
     */
    id: number;
    /**
     * 
     * @type {Date}
     * @memberof MealResponse
     */
    timestamp: Date;
    /**
     * 
     * @type {number}
     * @memberof MealResponse
     */
    sequenceNumber: number;
    /**
     * 
     * @type {Array<MealEntryResponse>}
     * @memberof MealResponse
     */
    entries: Array<MealEntryResponse>;
}

/**
 * Check if a given object implements the MealResponse interface.
 */
export function instanceOfMealResponse(value: object): value is MealResponse {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('timestamp' in value) || value['timestamp'] === undefined) return false;
    if (!('sequenceNumber' in value) || value['sequenceNumber'] === undefined) return false;
    if (!('entries' in value) || value['entries'] === undefined) return false;
    return true;
}

export function MealResponseFromJSON(json: any): MealResponse {
    return MealResponseFromJSONTyped(json, false);
}

export function MealResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): MealResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'timestamp': (new Date(json['timestamp'])),
        'sequenceNumber': json['sequenceNumber'],
        'entries': ((json['entries'] as Array<any>).map(MealEntryResponseFromJSON)),
    };
}

export function MealResponseToJSON(json: any): MealResponse {
    return MealResponseToJSONTyped(json, false);
}

export function MealResponseToJSONTyped(value?: MealResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'timestamp': ((value['timestamp']).toISOString()),
        'sequenceNumber': value['sequenceNumber'],
        'entries': ((value['entries'] as Array<any>).map(MealEntryResponseToJSON)),
    };
}

