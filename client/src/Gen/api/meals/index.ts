/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createMealResponseFromDiscriminatorValue, serializeMealResponse, serializePostMealRequest, type MealResponse, type PostMealRequest } from '../../models/index.js';
// @ts-ignore
import { MealsItemRequestBuilderNavigationMetadata, MealsItemRequestBuilderRequestsMetadata, type MealsItemRequestBuilder } from './item/index.js';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Builds and executes requests for operations under /api/meals
 */
export interface MealsRequestBuilder extends BaseRequestBuilder<MealsRequestBuilder> {
    /**
     * Gets an item from the ApiSdk.api.meals.item collection
     * @param id Unique identifier of the item
     * @returns {MealsItemRequestBuilder}
     */
     byId(id: number) : MealsItemRequestBuilder;
    /**
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<MealResponse[]>}
     */
     get(requestConfiguration?: RequestConfiguration<MealsRequestBuilderGetQueryParameters> | undefined) : Promise<MealResponse[] | undefined>;
    /**
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<MealResponse>}
     */
     post(body: PostMealRequest, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<MealResponse | undefined>;
    /**
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<MealsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toPostRequestInformation(body: PostMealRequest, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
}
export interface MealsRequestBuilderGetQueryParameters {
    dateFrom?: Date;
    dateTo?: Date;
}
/**
 * Uri template for the request builder.
 */
export const MealsRequestBuilderUriTemplate = "{+baseurl}/api/meals{?dateFrom*,dateTo*}";
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const MealsRequestBuilderNavigationMetadata: Record<Exclude<keyof MealsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byId: {
        requestsMetadata: MealsItemRequestBuilderRequestsMetadata,
        navigationMetadata: MealsItemRequestBuilderNavigationMetadata,
        pathParametersMappings: ["id"],
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const MealsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: MealsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        adapterMethodName: "sendCollection",
        responseBodyFactory:  createMealResponseFromDiscriminatorValue,
    },
    post: {
        uriTemplate: MealsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        adapterMethodName: "send",
        responseBodyFactory:  createMealResponseFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializePostMealRequest,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
};
/* tslint:enable */
/* eslint-enable */
