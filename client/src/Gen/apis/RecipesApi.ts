/* tslint:disable */
/* eslint-disable */
/**
 * Nutrition Tracker API
 * API Specification for Nutrition Tracker
 *
 * The version of the OpenAPI document: 0.0.1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import * as runtime from "../runtime";
import type { PostRecipeRequest, RecipeResponse } from "../models/index";
import {
    PostRecipeRequestFromJSON,
    PostRecipeRequestToJSON,
    RecipeResponseFromJSON,
    RecipeResponseToJSON,
} from "../models/index";

export interface ApiRecipesIdDeleteRequest {
    id: number;
}

export interface ApiRecipesPostRequest {
    postRecipeRequest?: PostRecipeRequest;
}

/**
 * RecipesApi - interface
 *
 * @export
 * @interface RecipesApiInterface
 */
export interface RecipesApiInterface {
    /**
     *
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RecipesApiInterface
     */
    apiRecipesGetRaw(
        initOverrides?: RequestInit | runtime.InitOverrideFunction,
    ): Promise<runtime.ApiResponse<Array<RecipeResponse>>>;

    /**
     */
    apiRecipesGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<RecipeResponse>>;

    /**
     *
     * @param {number} id
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RecipesApiInterface
     */
    apiRecipesIdDeleteRaw(
        requestParameters: ApiRecipesIdDeleteRequest,
        initOverrides?: RequestInit | runtime.InitOverrideFunction,
    ): Promise<runtime.ApiResponse<void>>;

    /**
     */
    apiRecipesIdDelete(
        requestParameters: ApiRecipesIdDeleteRequest,
        initOverrides?: RequestInit | runtime.InitOverrideFunction,
    ): Promise<void>;

    /**
     *
     * @param {PostRecipeRequest} [postRecipeRequest]
     * @param {*} [options] Override http request option.
     * @throws {RequiredError}
     * @memberof RecipesApiInterface
     */
    apiRecipesPostRaw(
        requestParameters: ApiRecipesPostRequest,
        initOverrides?: RequestInit | runtime.InitOverrideFunction,
    ): Promise<runtime.ApiResponse<RecipeResponse>>;

    /**
     */
    apiRecipesPost(
        requestParameters: ApiRecipesPostRequest,
        initOverrides?: RequestInit | runtime.InitOverrideFunction,
    ): Promise<RecipeResponse>;
}

/**
 *
 */
export class RecipesApi extends runtime.BaseAPI implements RecipesApiInterface {
    /**
     */
    async apiRecipesGetRaw(
        initOverrides?: RequestInit | runtime.InitOverrideFunction,
    ): Promise<runtime.ApiResponse<Array<RecipeResponse>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        let urlPath = `/api/recipes`;

        const response = await this.request(
            {
                path: urlPath,
                method: "GET",
                headers: headerParameters,
                query: queryParameters,
            },
            initOverrides,
        );

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(RecipeResponseFromJSON));
    }

    /**
     */
    async apiRecipesGet(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<RecipeResponse>> {
        const response = await this.apiRecipesGetRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiRecipesIdDeleteRaw(
        requestParameters: ApiRecipesIdDeleteRequest,
        initOverrides?: RequestInit | runtime.InitOverrideFunction,
    ): Promise<runtime.ApiResponse<void>> {
        if (requestParameters["id"] == null) {
            throw new runtime.RequiredError(
                "id",
                'Required parameter "id" was null or undefined when calling apiRecipesIdDelete().',
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        let urlPath = `/api/recipes/{id}`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters["id"])));

        const response = await this.request(
            {
                path: urlPath,
                method: "DELETE",
                headers: headerParameters,
                query: queryParameters,
            },
            initOverrides,
        );

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async apiRecipesIdDelete(
        requestParameters: ApiRecipesIdDeleteRequest,
        initOverrides?: RequestInit | runtime.InitOverrideFunction,
    ): Promise<void> {
        await this.apiRecipesIdDeleteRaw(requestParameters, initOverrides);
    }

    /**
     */
    async apiRecipesPostRaw(
        requestParameters: ApiRecipesPostRequest,
        initOverrides?: RequestInit | runtime.InitOverrideFunction,
    ): Promise<runtime.ApiResponse<RecipeResponse>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters["Content-Type"] = "application/json";

        let urlPath = `/api/recipes`;

        const response = await this.request(
            {
                path: urlPath,
                method: "POST",
                headers: headerParameters,
                query: queryParameters,
                body: PostRecipeRequestToJSON(requestParameters["postRecipeRequest"]),
            },
            initOverrides,
        );

        return new runtime.JSONApiResponse(response, (jsonValue) => RecipeResponseFromJSON(jsonValue));
    }

    /**
     */
    async apiRecipesPost(
        requestParameters: ApiRecipesPostRequest = {},
        initOverrides?: RequestInit | runtime.InitOverrideFunction,
    ): Promise<RecipeResponse> {
        const response = await this.apiRecipesPostRaw(requestParameters, initOverrides);
        return await response.value();
    }
}
