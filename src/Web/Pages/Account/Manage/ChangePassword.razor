@page "/Account/Manage/ChangePassword"
@using Microsoft.AspNetCore.Identity
@using Microsoft.Extensions.Logging
@using NutritionTracker.Infrastructure.Identity
@using NutritionTracker.Web.Identity

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager
@inject ILogger<ChangePassword> Logger

<PageTitle>Change password</PageTitle>

<h3>Change password</h3>
<StatusMessage Message="@message"/>
<div >
    <div >
        <EditForm Model="Input" FormName="change-password" OnValidSubmit="OnValidSubmitAsync" method="post">
            <DataAnnotationsValidator/>
            <ValidationSummary role="alert"/>
            <div >
                <label >
                    Old password
                    <InputText type="password" @bind-Value="Input.OldPassword" autocomplete="current-password" aria-required="true" placeholder="Please enter your old password." class="input-primary"/>
                </label>
                <ValidationMessage For="() => Input.OldPassword"/>
            </div>
            <div >
                <label >
                    New password
                    <InputText type="password" @bind-Value="Input.NewPassword" autocomplete="new-password" aria-required="true" placeholder="Please enter your new password." class="input-primary"/>
                </label>
                <ValidationMessage For="() => Input.NewPassword"/>
            </div>
            <div >
                <label >
                    Confirm password
                    <InputText type="password" @bind-Value="Input.ConfirmPassword" autocomplete="new-password" aria-required="true" placeholder="Please confirm your new password." class="input-primary"/>
                </label>
                <ValidationMessage For="() => Input.ConfirmPassword"/>
            </div>
            <button type="submit" class="button-primary">Update password</button>
        </EditForm>
    </div>
</div>